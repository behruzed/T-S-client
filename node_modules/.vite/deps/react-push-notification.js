import {
  require_react
} from "./chunk-WNGO3OWT.js";
import {
  __commonJS,
  __esm,
  __toCommonJS
} from "./chunk-7LVDCRE2.js";

// node_modules/react-push-notification/dist/notifications/Storage.js
var require_Storage = __commonJS({
  "node_modules/react-push-notification/dist/notifications/Storage.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PushNotification = void 0;
    var defaultDuration = 3e3;
    var PushNotification = class {
      constructor(op) {
        this.title = op.title;
        this.subtitle = op.subtitle;
        this.message = op.message;
        this.theme = op.theme;
        this.id = Math.random();
        this.styling = op.styling;
        this.closeButton = op.closeButton;
        this.onClick = op.onClick;
      }
    };
    exports.PushNotification = PushNotification;
    var Storage = class {
      constructor() {
        this.Storage = [];
        this.Listener = () => this.Storage;
        this.popAndPush = (NotificationId) => {
          let i = 0;
          while (i < this.Storage.length) {
            if (this.Storage[i].id === NotificationId) {
              this.Storage.splice(i, 1);
            } else {
              ++i;
            }
          }
          this.Listener(this.Storage);
        };
        this.setTimer = (NotificationId, duration) => {
          setTimeout(() => this.popAndPush(NotificationId), duration);
        };
        this.addListener = (listener) => {
          this.Listener = listener;
        };
        this.addNativeNotification = (options) => __awaiter(this, void 0, void 0, function* () {
          const { title, subtitle, message, duration, icon, vibrate, silent, onClick } = options;
          if (Notification.permission === "default" || Notification.permission === "denied") {
            yield Notification.requestPermission();
          }
          if (Notification.permission === "granted") {
            const not = new Notification(title, {
              body: message,
              data: subtitle,
              icon,
              vibrate,
              silent
            });
            not.onclick = onClick || null;
            setTimeout(not.close.bind(not), duration || defaultDuration);
          }
        });
        this.addWebNotification = (options) => {
          const { title, subtitle, message, theme, duration, backgroundBottom, backgroundTop, colorBottom, colorTop, closeButton, onClick } = options;
          const styling = {
            backgroundTop,
            backgroundBottom,
            colorTop,
            colorBottom
          };
          const newNotification = new PushNotification({ title, subtitle, message, theme, styling, closeButton, onClick });
          this.Storage.push(newNotification);
          this.setTimer(newNotification.id, duration || defaultDuration);
          this.Listener(this.Storage);
        };
        this.addNotification = (options) => __awaiter(this, void 0, void 0, function* () {
          const { native } = options;
          if (native) {
            return this.addNativeNotification(options);
          }
          return this.addWebNotification(options);
        });
      }
    };
    exports.default = new Storage();
  }
});

// vite:dep-pre-bundle:external-conversion:/home/behruzed/Documents/PrivateSystem/tsclient/node_modules/react-push-notification/dist/notifications/Notification.css
var Notification_exports = {};
import "/home/behruzed/Documents/PrivateSystem/tsclient/node_modules/react-push-notification/dist/notifications/Notification.css";
var init_Notification = __esm({
  "vite:dep-pre-bundle:external-conversion:/home/behruzed/Documents/PrivateSystem/tsclient/node_modules/react-push-notification/dist/notifications/Notification.css"() {
  }
});

// node_modules/react-push-notification/dist/notifications/PushNotification.js
var require_PushNotification = __commonJS({
  "node_modules/react-push-notification/dist/notifications/PushNotification.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importDefault(require_react());
    var PushNotification = (props) => {
      const { title, subtitle, message, theme, id, closeNotification, styling, closeButton, onClick } = props;
      let topStyling = {};
      let bottomStyling = {};
      if (styling) {
        topStyling.backgroundColor = styling.backgroundTop;
        topStyling.color = styling.colorTop;
        bottomStyling.backgroundColor = styling.backgroundBottom;
        bottomStyling.color = styling.colorBottom;
      }
      return react_1.default.createElement(
        "div",
        { className: `rpn-notification-card ${theme}`, onClick },
        react_1.default.createElement(
          "div",
          { className: `rpn-notification-card-top ${theme}`, style: Object.keys(topStyling).length ? topStyling : void 0 },
          react_1.default.createElement("span", null, title),
          react_1.default.createElement("span", { className: `rpn-notification-card-close ${theme}`, onClick: () => closeNotification(id) }, closeButton || "close")
        ),
        react_1.default.createElement(
          "div",
          { className: `rpn-notification-card-bottom ${theme}`, style: Object.keys(bottomStyling).length ? bottomStyling : void 0 },
          react_1.default.createElement("span", { className: "subtitle" }, subtitle),
          react_1.default.createElement("span", { className: "message" }, message)
        )
      );
    };
    exports.default = PushNotification;
  }
});

// node_modules/react-push-notification/dist/notifications/Notifications.js
var require_Notifications = __commonJS({
  "node_modules/react-push-notification/dist/notifications/Notifications.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importDefault(require_react());
    var Storage_1 = __importDefault(require_Storage());
    init_Notification();
    var PushNotification_1 = __importDefault(require_PushNotification());
    var Notifications = class extends react_1.default.Component {
      constructor() {
        super(...arguments);
        this.state = {
          value: []
        };
      }
      componentDidMount() {
        Storage_1.default.addListener((v) => this.setState({ value: v }));
      }
      render() {
        const { position } = this.props;
        const classN = `rpn-notification-holder ${position || "top-middle"} supertest`;
        return react_1.default.createElement("div", { className: classN }, this.state.value.map((note, i) => {
          return react_1.default.createElement(PushNotification_1.default, { key: i, closeNotification: Storage_1.default.popAndPush, onClick: note.onClick, id: note.id, theme: note.theme, title: note.title, subtitle: note.subtitle, closeButton: note.closeButton, message: note.message, styling: note.styling });
        }));
      }
    };
    exports.default = Notifications;
  }
});

// node_modules/react-push-notification/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-push-notification/dist/index.js"(exports) {
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Notifications = void 0;
    var Notifications_1 = __importDefault(require_Notifications());
    exports.Notifications = Notifications_1.default;
    var Storage_1 = __importDefault(require_Storage());
    var addNotification = Storage_1.default.addNotification;
    exports.default = addNotification;
  }
});
export default require_dist();
//# sourceMappingURL=react-push-notification.js.map
